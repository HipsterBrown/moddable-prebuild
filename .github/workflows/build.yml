name: Build Moddable tooling

on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      commit:
        description: 'Which commit to build for Moddable repo'
        required: false
        type: string
        default: 'latest'


jobs:
  check_latest_commit:
    runs-on: ubuntu-latest
    outputs:
      release: ${{ steps.latest_release.outputs.release }}
      commit: ${{ steps.latest_commit.outputs.commit }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get latest release
        id: latest_release
        run: echo "::set-output name=release::$(gh release view latest --json name --jq '.name')"
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Get latest Moddable commit
        id: latest_commit
        run: echo "::set-output name=commit::$(gh api repos/Moddable-OpenSource/moddable/commits --jq '.[0].sha' | cut -c1-8)"
        env:
          GITHUB_TOKEN: ${{ github.token }}
  build_tools:
    needs: check_latest_commit
    if: needs.check_latest_commit.outputs.release != needs.check_latest_commit.outputs.commit
    strategy:
      fail-fast: true
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: npm

      - run: npm ci
      - run: npm run build

      - uses: ilammy/msvc-dev-cmd@v1
      
      - name: Clone and build tooling
        uses: ./
        id: prebuild
        with:
          commit: ${{ github.event.inputs.commit }}

      - name: Push release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ steps.prebuild.outputs.tag }}
          tag_name: latest
          files: |
            ${{ steps.prebuild.outputs.artifactName }}
